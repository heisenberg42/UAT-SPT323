#pragma config(I2C_Usage, I2C1, i2cSensors)
#pragma config(Sensor, dgtl1,  rightSonar,     sensorSONAR_mm)
#pragma config(Sensor, dgtl3,  midSonar,       sensorSONAR_mm)
#pragma config(Sensor, dgtl5,  leftSonar,      sensorSONAR_mm)
#pragma config(Sensor, I2C_1,  qEncBL,         sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Sensor, I2C_2,  qEncBR,         sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Sensor, I2C_3,  qEncFR,         sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Sensor, I2C_4,  qEncFL,         sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Motor,  port1,           frontRightMotor, tmotorVex393_HBridge, openLoop, driveRight, encoderPort, I2C_3)
#pragma config(Motor,  port2,           frontLeftMotor, tmotorVex393_MC29, openLoop, reversed, driveLeft, encoderPort, I2C_4)
#pragma config(Motor,  port9,           backRightMotor, tmotorVex393_MC29, openLoop, reversed, driveRight, encoderPort, I2C_2)
#pragma config(Motor,  port10,          backLeftMotor, tmotorVex393_HBridge, openLoop, driveLeft, encoderPort, I2C_1)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#include "common\move.h"


task main()
{
	bool rcControl = true;

	long lRCContTogT = 0;

	startTask(RCMove);

	while(1)
	{
		if(vexRT[Btn8D] && ((nSysTime - lRCContTogT) > 250))
		{
			rcControl = !rcControl;

			if(rcControl)
			{
				startTask(RCMove);
			}
			else
			{
				stopTask(RCMove);
			}

			lRCContTogT = nSysTime;
		}
	}
}
