#pragma config(I2C_Usage, I2C1, i2cSensors)
#pragma config(Sensor, dgtl1,  rightSonar,     sensorSONAR_mm)
#pragma config(Sensor, dgtl3,  midSonar,       sensorSONAR_mm)
#pragma config(Sensor, dgtl5,  leftSonar,      sensorSONAR_mm)
#pragma config(Sensor, I2C_1,  qEncBL,         sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Sensor, I2C_2,  qEncBR,         sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Sensor, I2C_3,  qEncFR,         sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Sensor, I2C_4,  qEncFL,         sensorQuadEncoderOnI2CPort,    , AutoAssign)
#pragma config(Motor,  port1,           frontRightMotor, tmotorVex393_HBridge, openLoop, driveRight, encoderPort, I2C_3)
#pragma config(Motor,  port2,           frontLeftMotor, tmotorVex393_MC29, openLoop, reversed, driveLeft, encoderPort, I2C_4)
#pragma config(Motor,  port3,           scissorRightA, tmotorVex393_MC29, openLoop, reversed, driveRight)
#pragma config(Motor,  port4,           scissorRightB, tmotorVex393_MC29, openLoop, reversed, driveRight)
#pragma config(Motor,  port9,           backRightMotor, tmotorVex393_MC29, openLoop, reversed, driveRight, encoderPort, I2C_2)
#pragma config(Motor,  port10,          backLeftMotor, tmotorVex393_HBridge, openLoop, driveLeft, encoderPort, I2C_1)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

//#pragma config(I2C_Usage, I2C1, i2cSensors)
//#pragma config(Sensor, I2C_1,  qEncBL,         sensorQuadEncoderOnI2CPort,    , AutoAssign)
//#pragma config(Sensor, I2C_2,  qEncBR,         sensorQuadEncoderOnI2CPort,    , AutoAssign)
//#pragma config(Sensor, I2C_3,  qEncFR,         sensorQuadEncoderOnI2CPort,    , AutoAssign)
//#pragma config(Sensor, I2C_4,  qEncFL,         sensorQuadEncoderOnI2CPort,    , AutoAssign)
//#pragma config(Motor,  port2,           backLeftMotor, tmotorVex393_MC29, PIDControl, reversed, driveRight, encoderPort, I2C_2)
//#pragma config(Motor,  port3,           frontLeftMotor, tmotorVex393_MC29, PIDControl, reversed, driveLeft, encoderPort, I2C_3)
//#pragma config(Motor,  port4,           frontRightMotor, tmotorVex393_MC29, PIDControl, reversed, driveRight, encoderPort, I2C_4)
//#pragma config(Motor,  port5,           backRightMotor, tmotorVex393_MC29, PIDControl, reversed, driveLeft, encoderPort, I2C_1)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//Robot B [Small]


#include "common\scissor.h"

#pragma platform(VEX)




task main()
{
	startTask(scissorRC);
	while(1);
}
